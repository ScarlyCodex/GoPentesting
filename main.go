package main

import (
	"fmt"
	"github.com/ScarlyCodex/PortScanner/Scanner"
	"github.com/fatih/color"
	"os"
	"os/signal"
	"syscall"
	
)

func cleanup() {
	red := color.New(color.FgRed)
	boldRed := red.Add(color.Bold)
    boldRed.Println("\nFinalización ejecutada por teclado")
}


func main(){
	yl := color.New(color.FgYellow)
	cy := color.New(color.FgCyan)
	c := make(chan os.Signal)
    signal.Notify(c, os.Interrupt, syscall.SIGTERM)
    go func() {
        <-c
        cleanup()
        os.Exit(0)
    }()
	
	color.Magenta(`
	 $$$$$$\                   $$$$$$$$\                  
	$$  __$$\                  \__$$  __|                 
	$$ /  \__| $$$$$$\   $$$$$$$\ $$ | $$$$$$\   $$$$$$$\ 
	\$$$$$$\  $$  __$$\ $$  _____|$$ |$$  __$$\ $$  _____|
	 \____$$\ $$$$$$$$ |$$ /      $$ |$$$$$$$$ |$$ /      
	$$\   $$ |$$   ____|$$ |      $$ |$$   ____|$$ |      
	\$$$$$$  |\$$$$$$$\ \$$$$$$$\ $$ |\$$$$$$$\ \$$$$$$$\ 
	 \______/  \_______| \_______|\__| \_______| \_______|
	`)

	var (
	target string 
	puertoS int
	puertoE int
	peticion string
)	

	cy.Print("IP O URL ➤ ")
	fmt.Scan(&target)

	cy.Print(`
	Inicializar en ➤ `)

	fmt.Scan(&puertoS)

	cy.Print(`
	  Finalizar en ➤ `)
	fmt.Scan(&puertoE)

	port.GetOpenPorts(target, port.PortRange{Start : puertoS, End : puertoE})

	yl.Print("¿Desea realizar otra petición? y/N ➤ ")
	fmt.Scan(&peticion)

	// ports = port_scanner.get_open_ports("www.freecodecamp.org", [75,85])
	// print("Open ports:", ports)

	// port.GetOpenPorts("104.26.10.78", port.PortRange{Start : 8079, End : 8090})

	// port.GetOpenPorts("104.26.10.78", port.PortRange{Start : 440, End : 450})
	
	// port.GetOpenPorts("137.74.187.104", port.PortRange{Start : 440, End : 450})

	// port.GetOpenPorts("scanme.nmap.org", port.PortRange{Start : 20, End : 80})

}

